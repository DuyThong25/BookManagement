@model ShoppingCartVM

<form method="post">
    <div class="container mt-4 p-4 border borderbg-black border-1 border-opacity-10 shadow rounded-5">
        <div class="row mb-4">
            <div class="col-12 text-dark text-opacity-50">
                <a asp-controller="Home" asp-action="Index" class="nav-link">
                    <i class="bi bi-caret-left"></i> Continue Shopping
                </a>
            </div>
        </div>
        <div class="row ">
            <div class="col-6">
                <h3 class="fw-bold">Shopping Cart</h3>
            </div>
            <div class="col-6 text-end">
                <span>
                    Sort By: <b>Price <i class="bi bi-caret-down"></i></b>
                </span>
            </div>
        </div>
        <hr />
        @foreach (var obj in Model.ShoppingCartList)
        {
            <div class="row bg-dark bg-opacity-10 rounded-4 py-3 my-3">
                <div class="col-md-2 col-2 d-flex align-items-center">
                    @if (!String.IsNullOrEmpty(obj.Product.ImageUrl))
                    {
                        <img src="@obj.Product.ImageUrl" class="rounded w-100  img-fluid" />
                    }
                    else
                    {
                        <img src="~/images//product/no_image.jpg" class="rounded w-100  img-fluid" />
                    }
                </div>
                <div class="col-md-4 col-3 d-flex flex-column justify-content-center">
                    <h5 class="text-uppercase text-secondary text-truncate"><strong>@obj.Product.Title</strong></h5>
                    <div class="d-none d-md-block ">
                        <p>@Html.Raw(obj.Product.Description)</p>
                    </div>
                </div>
                <div class="col-md-2 col-3 text-center d-flex flex-column justify-content-center">
                    <div>
                        <a class="btn p-0" onclick="minusCart(@obj.Id,this)">
                            <i class="bi bi-dash h5 "></i>
                        </a>

                        <span class="border border-1 border-black border-opacity-10 px-1 py-1 rounded-3 mx-1 h6">@obj.Count</span>
                        <a class="btn p-0" onclick="plusCart(@obj.Id,this)">
                            <i class="bi bi-plus h5 "></i>
                        </a>
                    </div>
                    <div>
                        <small class=" text-dark text-opacity-25">(1 x Price: @obj.Price.ToString("c"))</small>
                    </div>
                </div>
                <div class="col-md-3 col-3  d-flex align-items-center justify-content-center">
                    <h6 class="fw-semibold">
                        @((obj.Price * obj.Count).ToString("c"))
                    </h6>
                </div>
                <div class="col-md-1 col-1 d-flex align-items-center justify-content-center">
                    <a href="#" class="btn btn-danger bg-gradient " onclick="deleteCart(@obj.Id, this)">
                        <i class="bi bi-trash-fill"></i>
                    </a>
                </div>
            </div>
        }
        <div class="row mt-5">
            <div class="col-md-4 offset-md-4">
                <ul class="list-group mb-4">
                    <li class="d-flex justify-content-between align-items-center">
                        <h5 class="text-dark fw-semibold text-uppercase"> Total (USD)</h5>
                        <h4 id="totalOrder" class="text-dark fw-bolder">@Model.OrderHeader.OrderTotal.ToString("c")</h4>
                    </li>
                </ul>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2 offset-md-5">
                <a asp-action="Summary" class="btn btn-primary border-0 bg-gradient w-100 py-2">Summary</a>
            </div>
        </div>
    </div>
</form>


@section Scripts {
    <script>
        const formatter = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD',
        });

        function plusCart(cartId, element) {
            let currentCountSpan = element.previousElementSibling;
            let currentTotalCart = element.closest("div").parentElement.nextElementSibling.firstElementChild;
            let totalOrder = document.getElementById("totalOrder");
            let unitPrice = currentCountSpan.parentElement.nextElementSibling.lastElementChild
            $.ajax({
                url: '/customer/cart/plus/' + cartId,
                type: 'PUT',
                success: (data) => {
                    currentCountSpan.innerHTML = data.cart.count; // Update the count
                    currentTotalCart.innerHTML = formatter.format(data.cart.count * data.cart.price)
                    totalOrder.innerHTML = formatter.format(data.total);
                    unitPrice.innerHTML = `(1 x Price: ${formatter.format(data.cart.price)})`
                },
                error: (e) => {
                    console.log(e);
                }
            });
        }

        function minusCart(cartId, element) {
            let currentCountSpan = element.nextElementSibling;
            let currentTotalCart = element.closest("div").parentElement.nextElementSibling.firstElementChild;
            let totalOrder = document.getElementById("totalOrder");
            let unitPrice = currentCountSpan.parentElement.nextElementSibling.lastElementChild

            if ((parseInt(currentCountSpan.innerHTML) - 1) != 0) {
                $.ajax({
                    url: '/customer/cart/minus/' + cartId,
                    type: 'PUT',
                    success: (data) => {
                        currentCountSpan.innerHTML = data.cart.count; // Update the count
                        currentTotalCart.innerHTML = formatter.format(data.cart.count * data.cart.price)
                        totalOrder.innerHTML = formatter.format(data.total);
                        unitPrice.innerHTML = `(1 x Price: ${formatter.format(data.cart.price)})`

                    },
                    error: (e) => {
                        console.log(e);
                    }
                });
            } else {
                deleteCart(cartId, element);
            }
        }

        function deleteCart(cartId, element) {
            let currentTotalCart = element.closest("div").parentElement.nextElementSibling.firstElementChild;
            let totalOrder = document.getElementById("totalOrder");

            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/customer/cart/delete/' + cartId,
                        type: 'DELETE',
                        success: (data) => {
                            // element.closest(".row").remove();
                            // totalOrder.innerHTML = formatter.format(data.total);
                            window.location.reload();
                        },
                        error: (e) => {
                            console.log(e);
                        }
                    });
                }
            });
        };
    </script>
}   